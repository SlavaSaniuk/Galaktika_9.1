//******************************************************************************
//                                                      (c) корпорация Галактика
// Галактика 7.12 - Общие функции
// Описание объектного интерфейса работы с единицами измерения
//******************************************************************************

//******************************************************************************
#ifNdef __oEdIzm_vih__
#define __oEdIzm_vih__

//******************************************************************************

#ifdef ComponentVersion
#component "L_MCU"
#end

#ifdef ComponentVersionInDict
#include iKatED.vih
#include iKatOtpED.vih
#end

//******************************************************************************

#ifNdef __TYPE_KATED__
#define __TYPE_KATED__
#doc
структуры записи таблицы KatEd
#end
#GalPublic type tKatEd = record as Table KatEd;
#doc
структуры записи таблицы KatOtpEd
#end
#GalPublic type tBufOtpEd = record as Table KatOtpEd;
#end

#doc
Объектный интерфейс описывает методы работы с единицами измерения
#end
#ifndef GAL9_1
ObjInterface ObjEdIzmV03;
#else
ObjInterface ObjEdIzm;
#end

//******************************************************************************

#doc
возращает последний NREC ед.изм.
#end
Function GetLastNRecKatEd: comp;
//******************************************************************************
#doc
возращает наименование последней ед.изм.
#end
Function GetLastNameKatEd: string;
//******************************************************************************
#doc
возращает аббр. последней ед.изм.
#end
Function GetLastAbbrKatEd: string;
//******************************************************************************
#doc
поиск ед.изм. по NREC
#end
Function FindKatEd(cEd: tNRec): boolean;
//******************************************************************************
#doc
возращает наименование, аббр., дискретность, и код ед.изм. по NREC
#end
Function GetKatEdInfo
            (
                  cEd      : tNRec;
#ifdef Gal9_1
              var Name     : tName;
              var ABBR     : s20;
#else
              var Name     : s20;
              var ABBR     : s5;
#end
              var Diskret  : word;
              var Kod      : tBarKod
            ): boolean;
//******************************************************************************
#doc
возращает наименование ед.изм. по NREC
#end
Function GetKatEdName(cEd: comp): string;
//******************************************************************************
#doc
возращает аббр. ед.изм. по NREC
#end
Function GetKatEdAbbr(cEd: comp): string;
//******************************************************************************
#doc
возращает дискретность код ед.изм. по NREC
#end
Function GetKatEdDiskr(cEd: comp): word;
//******************************************************************************
#doc
возращает код ед.изм. по NREC
#end
Function GetKatEdKod(cEd: comp): string;
//******************************************************************************
#doc
возвращает KatED.NRec по наименованию
#end
Function GetKatEdByName(sName: string): comp;
//******************************************************************************
#doc
возвращает KatED.NRec по аббревиатуре
#end
Function GetKatEdByAbbr(sAbbr: string): comp;
//******************************************************************************
#doc
возращает последний NREC отп.ед.изм.
#end
Function GetLastNRecOtpEd: comp;
//******************************************************************************
#doc
возращает последний NREC отп.ед.изм.
#end
Function GetLastNameOtpEd: string;
//******************************************************************************
#doc
возращает аббр. последней отп.ед.изм.
#end
Function GetLastAbbrOtpEd: string;
//******************************************************************************
#doc
возращает последний NREC отп.ед.изм.
#end
Function GetLastcMCUslOtpEd: comp;
//******************************************************************************
#doc
возращает коэффициент последней отп.ед.изм.
#end
Function GetLastKoefOtpEd: double;
//******************************************************************************
#doc
возращает поиск отп.ед.изм.
#end
Function FindOtpEd(cOtpEd: tNRec): boolean;
//******************************************************************************
#doc
возращает подробную информацию о отп.ед.изм.
#end
Function GetOtpEdAllInfo
            (
                  cOtpEd   : tNRec;    // уникальный код
              var Name     : tName;    // наименование
              var PrMC     : word;     // признак: 1-МЦ; 2-Услуга; 3-Гр.МЦ; 4-Гр.Услуг 5-Шаблон МЦ
              var cMCUsl   : tNRec;    // код товара/услуги/группы/шаблона
              var Koef     : double;   // коэффициент
              var Akt      : word;     // 1 - активная отпускная единица
              var Pr       : word;     // 1 - производственная единица
              var Diskret  : word;     // признак Дискретизации
              var bKod     : tBarKod;  // бар-код
              var Skid     : double;   // процент скидки по умолчанию при продаже
#ifdef Gal9_1
              var ABBR     : s20;      // сокращенное наименование
#else
              var ABBR     : s5;       // сокращенное наименование
#end
              var cKatEd   : tNrec;    // ссылка на KatEd
              var cf_Koef  : tNRec     // ссылка на формулу расчета коэффициента (только для Шаблона МЦ)

            ): boolean;
//------------------------------------------------------------------------------
#doc
возращает сокращенную информацию отп.ед.изм.
#end
Function GetOtpEdInfo
            (
                  cOtpEd   : tNRec;    // уникальный код
              var Koef     : double;   // коэффициент
              var Skid     : double;   // процент скидки по умолчанию при продаже
              var Name     : tName;    // наименование
#ifdef Gal9_1
              var ABBR     : s20;      // сокращенное наименование
#else
              var ABBR     : s5;       // сокращенное наименование
#end
              var Diskret  : Word      // признак Дискретизации
            ): boolean;
//------------------------------------------------------------------------------
//******************************************************************************
#doc
возвращает коэффициент. Если 0 (сбой в базе), возвращает единицу.
#end
Function GetKoefOtpEd(cEd: comp): double;
//******************************************************************************
#doc
возращает процент скидки по умолчанию при продаже
#end
Function GetSkidOtpEd(cEd: comp): double;
//******************************************************************************
#doc
возращает наименование отп.ед.изм.
#end
Function GetNameOtpEd(cEd: comp): string;
//******************************************************************************
#doc
возращает сокращенное наименование отп.ед.изм.
#end
Function GetAbbrOtpEd(cEd: comp): string;
//******************************************************************************
#doc
возращает признак Дискретизации отп.ед.изм.
#end
Function GetDiskrOtpEd(cEd: comp): word;
//******************************************************************************
#doc
возращает NRec отп.ед.изм. по коду
#end
Function GetNRecOtpEdByBKod(BKod: tBarKod; PrMC: word): comp;
//******************************************************************************
#doc
конвертирование ед.изм.
#end
Function ConvertToSecondEd(Kol1: double; cOtpEd1: comp; cOtpEd2: comp): double;
//******************************************************************************
#doc
конвертирование в уч.ед.изм.
#end
Function ConvertToUchEd(Kol1: double; cOtpEd: comp): double;
//******************************************************************************
#doc
конвертирование с учетом скидок
#end
Function ConvSellSumToSecondEd(Sum1: double; cEd1: comp; cEd2: comp): double; // с учетом скидок!
//******************************************************************************
#doc
возращает NRec
#end
Function GetAktOtpEdNRec(cThing: comp; MU: word): comp;
//******************************************************************************
#doc
возращает NREc уч.ед.изм.
#end
Function GetUchOtpEdNRec(cThing: comp; MU: word): comp;
//******************************************************************************
#doc
возращает информацию
#end
Function GetAktOtpEdInfo(
                          cThing: comp;
                          MU: word;
                          var nr: comp;
                          var nn: string;
                          var aa: string;
                          var kk: double
                        ): boolean;
//******************************************************************************
#doc
возращает наименование
#end
Function GetAktOtpEdName(cThing: comp; MU: word): string;
//******************************************************************************
#doc
возращает сокращенное наименование
#end
Function GetAktOtpEdAbbr(cThing: comp; MU: word): string;
//******************************************************************************
#doc
возращает коэффициент
#end
Function GetAktOtpEdKoef(cThing: comp; MU: word): double;
//******************************************************************************
#doc
возращает признак Дискретизации
#end
Function GetAktOtpEdDiskr(cThing: comp; MU: word): word;
//------------------------------------------------------------------------------
//******************************************************************************
#doc
проверка корректности количества в зависимости от того, делимая отп ед или нет
#end
Function CheckKolDiskret
              (
                var Kol: double;  // количество(если производится округление, то здесь округленное значение)
                cEd: comp;        // NRec отпускной единицы
                okRound: boolean; // нужно ли округлять первый парамент
                okVis: boolean    // Выдавать визуальные предупреждения
              ): boolean;
//******************************************************************************
#doc
проверка корректности количества в зависимости от того делимая отп ед или, если нет отпускной то учетная
#end
Function CheckKolDiskretAll
              (
                var Kol: double;  // количество(если производится округление, то здесь округленное значение)
                cOtpEd: comp;     // NRec отпускной единицы
                cEd: comp;        // NRec учетной единицы
                okRound: boolean; // FALSE-не округлять, TRUE-округлать(если okVis = TRUE, то будет
                                  //     выдан запрос на округление иначе округлит без запроса)
                okVis: boolean    // Выдавать визуальные предупреждения
              ): boolean;
//******************************************************************************
#doc
Возвращает аббревиатуру единицы измерения
#end
Function GetAbbr(s: string; var r: string): boolean;
//******************************************************************************
#doc
Процедура проверяет аббревиатуру единиц измерения первый параметр - аббревиатура, если он непуст -
он не меняется, если он пустой, аббревиатура устанавливается исходя из второго параметра
#end
Procedure CheckAbbr(var OldAbbr: string; EdName: string);
//******************************************************************************
#doc
результат добавления (tsOk)
#end
Function InsKatEdItem(var _wKatEd: TKatED;_MsgMode: word): word;
//******************************************************************************
#doc
Ищет по буферу подходящую запись в KatED и если не находит, то при необходимости добавляет
 _MaskKatEd - маска учета полей (для числовых полей <> 0, для строковых <> '')
 Если успешно нашли, то имеем          (_wKatEd.NRec <> 0)AND(GetInsKatEdItem = 1)
 Если успешно добавили, то имеем       (_wKatEd.NRec <> 0)AND(GetInsKatEdItem = 2)
 Если не нашли и не добавили, то имеем (_wKatEd.NRec  = 0)AND(GetInsKatEdItem = 3)
 Если возникла ошибка, то имеем        (_wKatEd.NRec  = 0)AND(GetInsKatEdItem = 0)
 ---- Пример использования -----
 var bufKatED_Mask: TKatED;
 var bufKatED      : TKatED;
 var MyTip_        : word;
 ClearAdvRecord(bufKatED_Mask);
 ClearAdvRecord(bufKatED);
 bufKatED.Name  := 'штука'; bufKatED_Mask.Name := '+';
 MyTip_ := fEdIzm.GetInsKatEdItem(bufKatED
                                 , bufKatED_Mask
                                 , word(0)        //0-только искать (без добавления); 1-добавлять если надо
                                 , cgiMessage     //тип сообщений об ошибках (cgiNoMessage/cgiMessage)
                                 ); //0 - ошибка //1 - нашли среди имеющихся / 2 - успешно добавили / 3 - не нашли и не добавили
#end
Function GetInsKatEdItem(var _wKatEd: TKatED;
                         _MaskKatEd  : TKatED;
                         _TipIns     : word;  //0-только искать (без добавления); 1-добавлять если надо
                         _MsgMode    : word   //тип сообщений об ошибках (cgiNoMessage/cgiMessage)
                        )            : word;  //0 - ошибка / 1 - нашли среди имеющихся / 2 - успешно добавили / 3 - не нашли и не добавили
//******************************************************************************
#doc
проверка дискретности единицы измерения
#end
Function CheckDiskr(_diskr: word): word;
//******************************************************************************
#doc
добавление отпускной единицы измерения
#end
Function InsertKatOtpEd(var buf: tBufOtpEd; boMsg: boolean): word;
//******************************************************************************
#doc
TRUE, если количество округлено до целого
#end
Function IsKolDiskret(kol: double): boolean;
//******************************************************************************

end;

//******************************************************************************

#ifdef Gal9_1
VipInterface EdIzm implements ObjEdIzm licensed(FREE);
#else
VipInterface EdIzmV03 implements ObjEdIzmV03 licensed(FREE);
#end

//******************************************************************************

#end