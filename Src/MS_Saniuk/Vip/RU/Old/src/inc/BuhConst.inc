//------------------------------------------------------------------------------
// Константы бухгалтерии
//------------------------------------------------------------------------------
// Константы для справочника счетов (Table BuhSchet)(SprSchet.vip)
//------------------------------------------------------------------------------
  cgDefSch         =  '';       //номер счета по умолчанию
  cgDefSub         =  '';       //номер субсчета по умолчанию
  cgAddSch         =  '--';     //для cmAddNewRec счета/субсчета
  cgSSSimv         =  '.';      //разделитель счета и субсчета в составном коде
  cgNotSch         =  '--';     //чтобы  различать понятия:
                                //"нет фильтра по счету/субсчету"
                                //и фильтр по "счет/субсчет не определен"

  cgSchetLength    = 21;        // Длина счета - Длина строки типа tSchet3

                                // BuhSchet.VidSald
  cgASchet         =  0;        // \ активный счет
  cgPSchet         =  1;        //  | пассивный счет
  cgAPSchet        =  2;        //  | активно-пассивный счет

                                // BuhSchet.PlanMode
  cgTempSch        =  1;        // \ временный счет

                                // BuhSchet.Balans
  cgBalance        =  0;        // \ балансовый счет
  cgOffBalance     =  1;        //  | забалансовый счет

                                // BuhSchet.SetDef
                                // \ ...
  cgKassa          =  1;        //  | Касса
  cgRS             =  2;        //  | Расчетный
  cgValRS          =  3;        //  | Валютный
  cgOtchet         =  4;        //  | Расчеты с подотчетными лицами
  cgZarplata       =  5;        //  | Расчеты с персоналом по оплате труда
  cgSale           =  6;        //  | Реализация продукции (работ, услуг)
  cgInterAcc       =  7;        //  | Взаиморасчеты (авизо)
  cgOS             =  8;        //  | Основные средства
  cgNMA            =  9;        //  | Нематериальные активы
  cgAmortOS        = 10;        //  | Амортизация ОС
  cgAmortNMA       = 11;        //  | Амортизация НМА

  cgPayRoll        =  501;      //  | Начисленная ЗП ( ! только для cgZarplata)
  cgDeposit        =  502;      //  | Депоненты      ( ! только для cgZarplata)
  cgSubInterAcc    =  701;      //  | Взаиморасчеты (авизо) ( ! только для cgInterAcc)

                                // BuhSchet.Saldo
  cgSaldo_RollToNDE     = 1;    // \  сальдо в разных валютах свернуть к национальной денежной единице
  cgSaldo_NoZeroForKau  = 2;    //  | не формировать нулевое сальдо по аналитике
  cgSaldo_ZeroInSameVal = 4;    //  | сальдо по аналитике считать нулевым если оно в одной валюте или НДЕ
  cgSaldo_RollToSub     = 8;    //  | сальдо по аналитике сворачивать до субсчетов счета
  cgSaldo_RollInReport  = 16;   //  | сворачивать сальдо в отчетах
  cgSaldo_RollToPodr    = 32;   //  | сворачивать сальдо по подразделениям

                                // BuhSchet.Visib
  cgNoPodr              =   1;  // \  Учет по подразделению не ведется
  cgMustPodr            =   2;  //  | Учет по подразделению ведется обязательно
       cgReservedPodr04 =   4;  //  |   Не используется пока, но зарезервировано
       cgReservedPodr01 =   8;  //  |   Не используется пока, но зарезервировано
  cgCheckPodr           =  15;  //  |   Если (BuhSchet.Visib and cgCheckPodr) = 0 то счет обыкновенный
                                //  |   15 = 1 + 2 + 4 + 8
  cgNoVal               =  16;  //  | Учет в валюте не ведется
  cgMustVal             =  32;  //  | Учет в валюте ведется обязательно
       cgReservedVal64  =  64;  //  |   Не используется пока, но зарезервировано
       cgReservedVal128 = 128;  //  |   Не используется пока, но зарезервировано
  cgCheckVal            = 240;  //  |   Если (BuhSchet.Visib and cgCheckVal) = 0 то счет обыкновенный
                                //  |   240 = 16 + 32 + 64 + 128
//------------------------------------------------------------------------------
  cgPick_JobType     = 65019; // Для Акта сверки(UserReport02)
  cgPick_FilterFirst = 65100; // самый первый фильтр
  cgPick_Status      = 65520; // фильтр по статусам
  cgPick_TXO         = 65521; // в интерактивных отчетах фильтр по ТХО
  cgPick_ExtAnInTree = 65522; // в иерархических отчетых для определения уровня группировки "Внешние КАУ"
  cgPick_TiDk        = 65523; // Тип хоз. документа
  cgPick_PodrK       = 65524; // подразделение корр. счета
  cgPick_SubK        = 65525;
  cgPick_SchK        = 65526;
  cgPick_Money       = 65527; // Для З/П
  cgPick_PostPol     = 65528; // Поставщики/Получатели - синоним Организаций
  cgPick_Valut       = 65529;
  cgPick_Podr        = 65530;
  cgPick_SubSch      = 65531;
  cgPick_Schet       = 65532;
  cgPick_Descr       = 65533;
  cgPick_DesGr       = 65534;
  cgPick_Filial      = 65535;
//------------------------------------------------------------------------------
// Перечень отчетов по Бухгалтерским данным
// B_AnUch.pas
  cgRepBuh_AnUch          =  10000;    // аналитический учет по счету
  cgRepBuh_GrKau          =  10001;    // аналитический учет по группе счетов
  cgRepBuh_AnUchVal       =  10002;    // аналитический учет по счету в валюте
  cgRepBuh_RepTree        =  10003;    // иерархические отчеты
  cgRepBuh_ConsAnUch      =  10004;    // аналитический учет по счету в консолидации
  cgRepBuh_ConsGrKau      =  10005;    // аналитический учет по группе счетов в консолидации
  cgRepBuh_PostPol        =  10006;    // обороты по поставщикам/получателям
  cgRepBuh_AnDebts        =  10007;    // Анализ задолженности
// B_ObVed.pas
  cgRepBuh_GVKassa        =  10010;    // группировочная ведомость (Касса)
  cgRepBuh_GVBank         =  10011;    // группировочная ведомость по счету (ФРО)
  cgRepBuh_ObPodr         =  10012;    // обороты по структурным подразделениям
// B_DayUch.pas
  cgRepBuh_RubKassa       =  10020;    // рублевая касса
  cgRepBuh_ValKassa       =  10021;    // валютная касса
  cgRepBuh_DayUch         =  10022;    // ежедневный учет по счету
// DeltaVal.pas
  cgRepBuh_DayUchVal      =  10023;    // Ежедневный учет и расчет курсовых разниц
// B_ObSub.pas
  cgRepBuh_ObSub          =  10030;    // обороты в разрезе субсчетов
  cgRepBuh_JOrd1          =  10031;    // обороты в разрезе субсчетов по счету касса (ЖО-1)
  cgRepBuh_MainBook       =  10032;    // Главная книга
  cgRepBuh_AllMainBook    =  10033;    // Главная книга с нарастающим итогом.
  cgRepBuh_MainBookBudzet =  10034;    // Главная книга для бюджетных организаций
// B_Valuta.pas
  cgRepBuh_ObValut        =  10040;    // обороты в валюте
  cgRepBuh_ObSubVal       =  10041;    // обороты по субсчетам в разрезе валют
  cgRepBuh_DeltaVal       =  10042;    // просмотр курсовых разниц
  cgRepBuh_MonDelta       =  10049;    // расчет курсовых разниц за месяц
// НЕ Паскаль
  cgRepBuh_SeeSalM        =  10050;    // просмотр сальдо на начало месяца
  cgRepBuh_SeeSalD        =  10051;    // просмотр сальдо за день
  cgRepBuh_SeeSalDKassa   =  10052;    // просмотр сальдо за день по кассе
  cgRepBuh_SaldoDAS       =  10054;    // сальдо по группам счетов (ДАС)
// B_Saldo.pas
  cgRepBuh_ConsSeeSalM    =  10053;    // просмотр сальдо на начало месяца
  cgRepBuh_CalcSaldoDay   =  10056;    // перерасчет сальдо на начало дня
  cgRepBuh_CalcSaldoMon   =  10057;    // перерасчет сальдо на начало месяца
  cgRepBuh_CheckSaldoMon  =  10058;    // сравнение сальдо на начало месяца
  cgRepBuh_CalcSaldoDay50 =  10059;    // перерасчет сальдо на начало дня по Кассе
// B_JornAn.pas
  cgRepBuh_JOrder         =  10060;    // журналы-ордера, шахматки и т.д.
// JoUnLoad.vip
  cgRepBuh_JoTuned        =  10061;    // универсальный журнал-ордер
// MoUnLoad.vip
  cgRepBuh_MemoOrder      =  10062;    // Мемориальный ордер
// ?.vip
  cgRepBuh_BookJornMain   =  10063;    // Книга Журнал-главная

  cgRepBuh_HierAn         =  10064;    // Интерактивный аналитический отчет
  // JornOperation.vip
  cgRepBuh_JornOperation  =  10065;    // Журнал операций - бюджетный учет
  // CardAccount.vip
  cgRepBuh_CardAccount    =  10066;    // Карточка учета средств и расчетов
  cgRepBuh_AktReview   =  10067;
  // сохранение настроек в пакетном распределении платежей
  cgDistPl_PakRaspPlat    =  10068;
  // сохранение настроек в пакетном распределении платежей с учетом возвратов и рекламаций
  cgDistPl_ActRecDistr    =  10069;
  // сохранение настроек в пакетном распределении зачета авансов
  cgDistPl_CredAdvDisrt   =  10070;

  // Бюджетный учет
  cgRepBudg_SpravkaZabalance = 11000;  // Справка о наличии имущества и обязательств на забалансовых счетах
  
  // заказные и пользовательские отчеты
  cgRepBuh_UserRep01      =  65000;    // справка по дебиторской/кредиторской задолженности
  cgRepBuh_UserRep02      =  65100;    // Акт сверки
  cgRepBuh_UserRep03      =  65101;    // Начисление процентов по депозитам

  cgRepBuh_PatAuto      =  65201;    // интерактивный отчет запускаемый из пат

//------------------------------------------------------------------------------
  cgDefRepNastrName     = '<Настройка по умолчанию>';
//------------------------------------------------------------------------------
// BuhFiltr.vip
//------------------------------------------------------------------------------
  cgBuhFilter_SaldMoun     = 1;
  cgBuhFilter_SaldDay      = 2;
  cgBuhFilter_SaldoNM      = 3;
  cgBuhFilter_Oborot       = 4;  // обороты
  cgBuhFilter_BookProv     = 5;  // книга проводок (вызов из меню)
  cgBuhFilter_PrnOborot    = 6;  // печать оборотов
  cgBuhFilter_PrnSaldDay   = 7;  // просмотр сальдо за день
  cgBuhFilter_PrnSalDKassa = 8;  // просмотр сальдо за день по кассе
  cgBuhFilter_PrnSaldMon   = 9;  // печать сальдо за месяц
  cgBuhFilter_SeeSaldMon   = 10; // печать сальдо за месяц (из меню)
  cgBuhFilter_SaldoBL      = 11; // Сальдо по просроченной задолженности __BackLog__
  cgBuhFilter_ActSverOborot = 12; // константы для Пгк Акт сверки
  cgBuhFilter_ActSverSaldo  = 13; // константы для Пгк Акт сверки

  cgBuhFilter_SchetD    = 65001;
  cgBuhFilter_SubSchD   = 65002;
  cgBuhFilter_KauD1     = 65003;
  cgBuhFilter_KauD2     = 65004;
  cgBuhFilter_KauD3     = 65005;
  cgBuhFilter_KauD4     = 65006;
  cgBuhFilter_KauD5     = 65007;
  cgBuhFilter_KauD6     = 65008;
  cgBuhFilter_PodrD     = 65009;

  cgBuhFilter_SchetK    = 65010;
  cgBuhFilter_SubSchK   = 65011;
  cgBuhFilter_KauK1     = 65012;
  cgBuhFilter_KauK2     = 65013;
  cgBuhFilter_KauK3     = 65014;
  cgBuhFilter_KauK4     = 65015;
  cgBuhFilter_KauK5     = 65016;
  cgBuhFilter_KauK6     = 65017;
  cgBuhFilter_PodrK     = 65018;

  // ModeSet1 - Маски для параметров основного фильтра
  maskSchetD  =      1; // 0001h;
  maskSubD    =      2; // 0002h;
  maskKauD1   =      4; // 0004h;
  maskKauD2   =      8; // 0008h;
  maskKauD3   =     16; // 0010h;
  maskKauD4   =     32; // 0020h;
  maskKauD5   =     64; // 0040h;
  maskKauD6   =    128; // 0080h;
  maskPodrD   =    256; // 0100h;
  maskSchetK  =    512; // 0200h;
  maskSubK    =   1024; // 0400h;
  maskKauK1   =   2048; // 0800h;
  maskKauK2   =   4096; // 1000h;
  maskKauK3   =   8192; // 2000h;
  maskKauK4   =  16384; // 4000h;
  maskKauK5   =  32768; // 8000h;
  maskKauK6   =  65536; //10000h;
  maskPodrK   = 131072; //20000h;

  maskAllD    = maskSubD or maskKauD1 or maskKauD2 or maskKauD3
                         or maskKauD4 or maskKauD5 or maskKauD6;
  maskAllK    = maskSubK or maskKauK1 or maskKauK2 or maskKauK3
                         or maskKauK4 or maskKauK5 or maskKauK6;

  // ModeSet2 - Маски для параметров дополнительного фильтра
  maskSoprHoz =      1; // 0001h;
  maskDescr   =      2; // 0002h;
  maskDesGr   =      4; // 0004h;
  maskKlProv  =      8; // 0008h;
  maskVal     =     16; // 0010h;
  maskFilial  =     32; // 0020h;
  maskTXO     =     64; // 0040h;
  maskNoDok   =    128; // 0080h;
  maskStatus  =    256; // 0100h;
  maskDate    =    512; // 0200h;
  maskViOb    =   1024; // 0400h;
//------------------------------------------------------------------------------
// BProcess.pas Маска поиска фильтров TBuhProcess.FindMask
  cgFindMask_No      =    0; // no
  cgFindMask_Filial  =    1; // cgPick_Filial
  cgFindMask_DesGr   =    2; // cgPick_DesGr
  cgFindMask_Schet   =    4; // cgPick_Schet
  cgFindMask_SubSch  =    8; // cgPick_SubSch
  cgFindMask_Podr    =   16; // cgPick_Podr
  cgFindMask_Kau     =   32; // no
  cgFindMask_PostPol =   64; // cgPick_PostPol
  cgFindMask_Valut   =  128; // cgPick_Valut
  cgFindMask_SchK    =  256; // cgPick_SchK
  cgFindMask_SubK    =  512; // cgPick_SubK
  cgFindMask_PodrK   = 1024; // cgPick_PodrK
  cgFindMask_TiDk    = 2048; // cgPick_TiDk
  cgFindMask_Descr   = 4096; // cgPick_Descr
  cgFindMask_TXO     = 8192; // в интерактивных отчетах фильтр по ТХО
  cgFindMask_Status  =16384; // cgPick_Status
//------------------------------------------------------------------------------
// Все отчеты pas\buh\*.pas - "Ведомость в ..."
  cgVedVal_NDE       =    0; // NDE
  cgVedVal_RepVal    =    1; // ReportVal
  cgVedVal_NdeRep    =    2; // NDE + RepVal
  cgVedVal_KolNde    =    3; // Kol + NDE
  cgVedVal_KolRep    =    4; // Kol + RepVal
//------------------------------------------------------------------------------
// Паскаль. bGetFil.VedVal - обработка валюты
// [V]ed[Val]
  vv_All             =    0;   // Все проводки
  vv_Val             =    1;   // Проводки в валюте (сумма в валюте <> 0)
  vv_ValAndKR        =    2;   // Проводки в валюте и проводки по КР валют
  vv_NoVal           =    3;   // Проводки только в НДЕ (без проводок по КР)
//------------------------------------------------------------------------------
// BProcess.pas Дополнительные параметры расчета сальдо TBuhProcess.CalcSaldo
  cgCS_Simple        =    0;   // Обыкновенный расчет
  cgCS_RollFirst     =    1;   // Свернуть аналитику до первого уровня
  cgCS_NoDesGr       =    2;   // Без учета кодов рабочих групп
  cgCS_MakeZero      =    4;   // Формировать нулевое сальдо
  cgCS_SaveVal       =    8;   // Оставлять для расчета КР ссылку на валюту
                               // если SumV = 0, SumR <> 0. см. ПИР 102.39559
  cgCS_RollToNDE     =   16;   // Свернуть валютое сальдо к НДЕ
  cgCS_RollSecond    =   32;   // Свернуть аналитику до второго уровня
  cgCS_RollThird     =   64;   // Свернуть аналитику до третьего уровня
  cgCS_RollThourth   =  128;   // Свернуть аналитику до четвертого уровня
  cgCS_RollFifth     =  256;   // Свернуть аналитику до пятого уровня
  cgCS_RollSixth     =  512;   // Свернуть аналитику до шестого уровня

//------------------------------------------------------------------------------
// Закладки общего интерфейса мастера идентификаторов.
  cgIdent_All        = 31;     // все
  cgIdent_TXO        = 1;      // системные идентификаторы для TXO
  cgIdent_HozForm    = 2;      // ключи заданной TXO
  cgIdent_PAT        = 4;      // ПАТ идентификаторы
  cgIdent_Typical    = 8;      // типовые алгоритмы и константы
  cgIdent_Func       = 16;     // общеиспользуемые функции
  cgIdent_IdentAPI   = 1024;   // API идентификаторов

  cgIdent_TAX        = 4096;    // константы формы

  cgIdent_TXODef     = 32;     // активная закладка - системные идентификаторы для TXO
  cgIdent_HozFormDef = 64;     // активная закладка - ключи заданной TXO
  cgIdent_PATDef     = 128;    // активная закладка - ПАТ идентификаторы
  cgIdent_TypicalDef = 256;    // активная закладка - типовые алгоритмы и константы
  cgIdent_FuncDef    = 512;    // активная закладка - общеиспользуемые функции
  cgIdent_IdentAPIDef= 2048;   // активная закладка - API идентификаторов
//------------------------------------------------------------------------------
// Константы для типов Журналов-ордеров (B_JornAn.pas, JornTune.vip, ...)
// [j]ornal[o]rder
  joJornalOrder   = 0;
  joAnalitObor    = 1;
  joOborSaldVed   = 2;
  joMainBook      = 3;
  joChess         = 4;
  joOtherVed      = 5;

  joJornalAnalit  = 101;
  joMemoOrder     = 111;
  joMemoOrderH    = 112;
  joAktReviews    = 113;
  joOnLineGroup   = 201;

  joOperation     = 301;  // Журнал операций
  joCardAccount   = 302;  // Карточка учета
  //Для нового акта сверки(cgRepBuh_UserRep02)
  joAktReview     = 400;

//------------------------------------------------------------------------------
//константы для работы с распределением договоров
//[l]ink[d]ogovor
  ld_Begin = 1;
  ld_Result = 2;
//------------------------------------------------------------------------------
// константы параметров запуска Oborot
  cgiOborot_AllOborot         = 0; // все
  cgiOborot_DocOborot         = 1; // по документу
  cgiOborot_SoprHozOborot     = 4; // по SoprHoz
  cgiOborot_DocSpOborot       = 5; // по позиции спецификации документа
  cgiOborot_OneOborot         = 6; // по одному заданному обороту
// вид интерфейса
  cgiOborot_BrowseFull        = 0; // browse с панелью дополнительной информации снизу
  cgiOborot_ScreenFull        = 1; // окно с закладками
  cgiOborot_BrowseShort       = 2; // browse
  cgiOborot_ScreenShort       = 3; // маленький screen с минимумом информации
//------------------------------------------------------------------------------
// Константы для Курсовых разниц:
//          ! Когда умрет паскаль с расчетом курсовых - перенести в DiffRate.vih
// Valut.[D]ay[M]on
  dmMonth = 0;
  dmDay   = 1;
// Valut.[V]id[O]b - см. Valut.vip - List для Valut.VidOb
  vo_All     =  0;
  vo_Oborot  =  1;
  vo_Saldo   =  2;
  vo_SD_OD   =  3;
  vo_SK_OK   =  4;
  vo_SD      =  5;
  vo_SK      =  6;
  vo_OD      =  7;
  vo_OK      =  8;
//------------------------------------------------------------------------------
// константы для метода SetValueParam объектного интерфейса ObjDateRangeParam
  cgDateRange_rtDay      = 0;
  cgDateRange_rtMonth    = 1;
  cgDateRange_rtQuarter  = 2;
  cgDateRange_rtHalfYear = 3;
  cgDateRange_rtYear     = 4;
  // значения параметра cgDateRange_rtDay
  cgDateRange_rsBegPeriod = 8;
  cgDateRange_rsEndPeriod = 9;
  cgDateRange_rsHozDoc    = 10;
//------------------------------------------------------------------------------
// константы для мастера ПАТ идентификаторов
  // результат количество/в валюте
    cgPAT_ResVal       =  0; // результат в валюте
    cgPAT_ResKol       =  1; // результат количество
  // сальдо/обороты/проводки
    cgPAT_Saldo        =  0; // сальдо
    cgPAT_Oborot       =  1; // обороты
    cgPAT_Provod       =  2; // проводки
  // дебет/кредит
    cgPAT_Debit        =  0; // дебет
    cgPAT_Kredit       =  1; // кредит
  // сальдо входящее/исходящее
    cgPAT_GoOut        =  0; // исходящее сальдо
    cgPAT_GoIn         =  1; // входящее сальдо
  // дескриптор/группа дескрипторов (для оборотов/проводок)
    cgPAT_Descr        =  0; // дескриптор
    cgPAT_DesGr        =  1; // группа дескрипторов
  // период
    cgPAT_CodePeriod   =  0; // явно задан Код объекта
  // базовая дата (для относительного периода)
    cgPAT_AutoDate     =  0;
    cgPAT_BegCur       =  1; // начало текущего отчетного периода
    cgPAT_BegPer       =  2; // начало периода из настройки
    cgPAT_EndPer       =  3; // конец периода из настройки
    cgPAT_HozDoc       =  4; // дата хоздокумента
  // филиал, фильтр на валюту, счет, субсчет, подразделение, аналитика
    cgPAT_All          = 0; // По всем объектам учета
    cgPAT_Nrec         = 1; // Nrec объекта
    cgPAT_Code         = 2; // маска на код объекта
    cgPAT_Auto         = 3; // "?" автоподстановка объекта
    cgPAT_AutoReg      = 4; // "?" автоподстановка объекта из заданного режима аналитики
    cgPAT_Nul          = 5; // "нет" - объект не определен
    cgPAT_Filter       = 6; // @"фильтр" - объекты перчислены в фильтре

    cgPAT_Filter_Nrec     = 0; // Фильтр по NREC-у
    cgPAT_Filter_Mask     = 1; // Фильтр по маске
    cgPAT_Filter_External = 2; // Внешний фильтр
//------------------------------------------------------------------------------
// Константа для Национальной денежной единицы
  cNDE = 0;
//------------------------------------------------------------------------------
// Константы для объекта ExcelFormat
  cgGetNastDecimalDigit = 65535; // если данная константа подставляется в параметр
                                 // ColDecimalDigit - количество знаков после запятой,
                                 // то данные берутся из настройки Fin.ShoWdigit
                                 // "Количество отображаемых знаков после запятой в отчетах"
//------------------------------------------------------------------------------
// Константы для налоговой отчетности на FastReport
  cgETax_EditModeExpert = 0;
  cgETax_EditModeUser = 1;
//------------------------------------------------------------------------------
// Кассовые ведомости
  // Признаки обработки спецификации (поля SpPlVed.Priznak, SpVedDepon.Priznak)
  cgNo = 0;       // нет документов
  cgPD = 1;       // сформирован платежный документ на выдачу
  cgVD = 2;       // сформирована ведомость депонирования
  cgAll = 3;      // сформированы платежный документ и ведомость депонирования
//------------------------------------------------------------------------------
// Атрибуты приказа на командировку
  cgMultiPrik = 1;  // многоэтапность
  cgNodePrik  = 2;  // для построения иерархии
//------------------------------------------------------------------------------
// Константы для привязки документов в авансовом отчете и приказе на командировку
  // Режимы вызова интерфейса GetKO и GetKO_Form
  cgTip_PrihDocAO  = 1;  // Приходные документы по авансовому отчету
  cgTip_RashDocAO  = 2;  // Расходные документы по авансовому отчету
  cgTip_RashDocKU  = 3;  // Расходные документы по приказу на командировку
  cgTip_AvnOtchKU  = 4;  // Авансовые отчеты по приказу на командировку
  cgTip_PlatDocPr  = 5;  // Платежные документы по приказу на командировку
  cgTip_PlatDocAO  = 6;  // Платежные документы по авансовому отчету
  cgTip_PlatVedKU  = 7;  // Платежные ведомости по приказу на командировку
  cgTip_PrihDocKU  = 8;  // Приходные документы по приказу на командировку
  // Типы связей документов в таблице DocPodot
  cgLink_PrihDocAO = 99; // Связь приходных документов с авансовым отчетом (ПКО и ВПКО)
  cgLink_RashDocAO = 9;  // Связь расходных документов с авансовым отчетом (РКО, ВРКО, ПП, ВПП и БС)
  cgLink_RashDocKU = 2;  // Связь расходных документов с приказом на командировку (РКО, ВРКО, ПП и ВПП)
  cgLink_PrihDocKU = 6;  // Связь приходных документов с приказом на командировку (ПКО, ВПКО)
  cgLink_AvnOtchKU = 22; // Связь авансовых отчетов с приказом на командировку (АО)
  cgLink_ReesPlDoc = 3;  // Связь реестра по перечислениям в банк с платежным документом (ПП и ВПП)
  cgLink_SpPlVedKU = 23; // Связь сотрудника в платежной ведомости с сотрудником в приказе на командировку (ПВ)
  cgLink_Reestr    = 4;  // Связь между двумя реестрами по перечислениям в банк
  cgLink_ReesKU    = 5;  // Связь реестра по перечислениям в банк с приказом на командировку
  // Типы статей расходов (RashDoc.TipDoc)
  cgRashDoc_KU   = 2;  // Спецификация Командировочного удостоверения (КУ)
  cgRashDoc_RKO  = 8;  // Спецификация Расходного кассового ордера (РКО)
  cgRashDoc_AO   = 9;  // Спецификация Авансового отчета (АО)
  cgRashDoc_VRKO = 18; // Спецификация Валютного расходного кассового ордера (ВРКО)
  cgRashDoc_RRV1 = 27; // Таблица 1 для учета поступлений валюты в РРВ
  cgRashDoc_RRV2 = 28; // Таблица 2 для учета поступлений валюты в РРВ
  cgRashDoc_Drvr = 33; // Расходы водителя (сопровождающего)
  cgRashDoc_Tour = 34; // Выплаты в рейсе
  // Режимы запуска интерфейса формирования реестра по перечислению подотчетных сумм по приказам на командировки
  cgReestrBySpec = 1;  // Реестр по спецификации
  cgReestrByPrik = 2;  // Реестр по приказу
  cgReestrByMark = 3;  // Реестр по выбранным приказам
  // Константы для определения, откуда и для чего был вызван интерфейс G_PlPor
  cgTip_DocDefs     = 0; // По умолчанию
  cgTip_DocRees     = 1; // Платежные документы с реестром
  cgTip_DocAvns     = 2; // Документы из АО
  cgTip_DocPrik     = 4; // Документы из приказа
  cgTip_BuhSpPrihAO = 8; // Бухгалтерская справка из АО с закладки "Приходы"
//------------------------------------------------------------------------------
// Вид отчетов
  cgFastReport = 0;      // Отчет FastReport
  cgFCOM       = 1;      // Отчет FCOM
//------------------------------------------------------------------------------
// Виды данных [V]id[S]um, например MBook.VidSum, AnSchNew.VidSum
  vsSaldoVhD = 1;        // Совпадает со смыслом SaldMoun.ViOb (Дебетовое сальдо)
  vsSaldoVhK = 2;        // Совпадает со смыслом SaldMoun.ViOb (Кредитовое сальдо)
  vsOborDeb  = 3;
  vsOborKred = 4;
//------------------------------------------------------------------------------
// Режимы блокировки записи
  cgProt_None     =   0; // Документ доступен для редактирования
  cgProt_Descr    =   1; // По дескриптору
  cgProt_DesGr    =   2; // По группе пользователей
  cgProt_Obor     =   4; // По наличию оборотов
  cgProt_Stat     =   8; // По статусу
  cgProt_Date     =  16; // По закрытому периоду
  cgProt_Edit     =  32; // Другой пользователь редактирует текущий документ
  cgProt_CloseOb  =  64; // У ХозОперации есть проводка в закрытом периоде
  cgProt_Protect  = 128; // В системе Protect не даны права на редактирование таблицы
  cgProt_Manual   = 256; // По настройке доступа на редактирование
  cgProt_ReadOnly = 512; // Только чтение

//------------------------------------------------------------------------------
// Режимы блокировки реестра
  cgProtReestr_None   = 0; // Реестр доступен для редактирования
  cgProtReestr_Opl    = 1; // По реестру сформирован и оплачен документ
  cgProtReestr_Oborot = 2; // По реестру есть проводки
  cgProtReestr_PlPor  = 4; // По реестру сформирован документ, который закрыт для редактирования

//------------------------------------------------------------------------------
// значения поля Oborot.RuchAuto
  cgOborotManual   = 0;  // ручная проводка
  cgOborotAuto     = 1;  // автоматическая
  cgOborotModified = 7;  // автоматическая, затем отредактированная вручную

//------------------------------------------------------------------------------
// источник данных для формирования документа (PLPOR.WRESERV, битовая маска)
  cgSrc_Salary          = 1; // результаты расчета з/п ("Заработная плата")
  cgSrc_IptRegisters    = 2; // реестры межпериода ("Заработная плата")
  cgSrc_IptTaxes        = 4; // налоги межпериода ("Заработная плата")
  cgSrc_Sbor            = 8; // сбор по перечислению ("Заработная плата")

//------------------------------------------------------------------------------
// Алгоритмы переформирования реестров
  cgPl_NotModi  = 0; // не вносить изменения в платежку
  cgPl_Modi     = 1; // разделить платежку
  cgPl_ModiAsk  = 2; // разделить платежку с вопросом

//------------------------------------------------------------------------------
// режимы формирования реестров по перечислениям
  cgFormPR_NazvaPol  = 0; // наименование реестра по получателям
  cgFormPR_NazvaBank = 1; // наименование реестра по банкам
  cgFormPR_NoMess    = 2; // не выдавать сообщения в процессе формирования (для пакетных режимов)

//------------------------------------------------------------------------------
// контроль сумм при привязке договора (соглашения, ПКП)
  cgSummDog_No   = 0;
  cgSummDog_Yes  = 1;
  cgSummDog_Exit = 2;

//------------------------------------------------------------------------------
// контроль сумм при привязке договора (соглашения, ПКП)
  cgDog_NoOk  = 0;
  cgDog_Ok    = 1;
  cgDog_Exit  = 2;

//------------------------------------------------------------------------------
// Константы для объектов расшифровки расчета ПАТ-форм
  cgPatCheckLevel_FullCount = 0; // Полный расчет
  cgPatCheckLevel_CheckOnly = 1; // Разбор и проверка синтаксиса

//------------------------------------------------------------------------------
// Форматы представления для расшифровки расчета ПАТ-форм
// Переключаются по [Alt+S] в окне расшифровки

  cgPatViewMode_TreeNumeric = 0;
  // 0 - Нормализованный иерархический вид формулы представлены номерами
  //&106_5                         1 + 2
  //  1. &106_5_A                  3 - 4 - 5 - (6 + 7 + 8 + 9)
  //    3. ОК68_14[1:"001"]        ОК68_14[1:"001"]
  //    4. ПД51\68_14[1:"001"]     ПД51\68_14[1:"001"]
  //    5. ПД68\68_14[1:"001"]     ПД68\68_14[1:"001"]
  //    ....
  //  2. &106_5_B                  10 - 11 - 12 - (13 - 14) - 15 - 16
  //    10. ОК68_15[1:"001"]       ОК68_15[1:"001"]
  //    11. ПД51\68_15[1:"001"]    ПД51\68_15[1:"001"]
  //    12. ПД68\68_15[1:"001"]    ПД68\68_15[1:"001"]

  cgPatViewMode_TreeFormula = 1;
  // 1 - Обычный иерархический вид, отображаются исходные формулы как есть
  //&106_5                         &106_5_a+&106_5_b
  //  1. &106_5_A                  ОК68_14[1:"001"] - ПД51\68_14[1:"001"] ...
  //    3. ОК68_14[1:"001"]        ОК68_14[1:"001"]
  //    4. ПД51\68_14[1:"001"]     ПД51\68_14[1:"001"]
  //    5. ПД68\68_14[1:"001"]     ПД68\68_14[1:"001"]
  //    ...
  //  2. &106_5_B                  ОК68_15[1:"001"] - ПД51\68_15[1:"001"] ...
  //    10. ОК68_15[1:"001"]       ОК68_15[1:"001"]
  //    11. ПД51\68_15[1:"001"]    ПД51\68_15[1:"001"]
  //    12. ПД68\68_15[1:"001"]    ПД68\68_15[1:"001"]
  //    ...

  cgPatViewMode_ListFormula = 2;
  // 2 - Обычный линейный вид, отображаются исходные формулы как есть

  cgPatViewMode_FastReport = 10;
  // 10 - Представление в FastReport