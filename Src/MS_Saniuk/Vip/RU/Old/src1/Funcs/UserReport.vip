//------------------------------------------------------------------------------
//                                                      (c) Корпорация ГАЛАКТИКА
//                                                          (c) Галактика - Киев
//------------------------------------------------------------------------------
// Галактика 5.8x - 7.1x - 8.0 - 8.1
// Интерфейс для вызова пользовательских отчетов
//------------------------------------------------------------------------------

#include UserReport.vih

#doc
Интерфейс для вызова пользовательских отчетов
#end
Interface UserReport 'Отчеты пользователя' EscClose, Cyan;
Show at (,,70,);

const
  IfcPrefix  = 'UserReport_';
#ifdef ComponentVersion
  ObjIfcName = 'F_UserReport::IUserReport';
#else
  ObjIfcName = 'IUserReport';
#end
end;

Table Struct ReportList
(
   NRec          : comp
  ,ReportName    : string[100]
  ,InterfaceName : string[50]
  ,cParent       : comp
  ,Priority      : integer
  ,isLeaf        : boolean
)
with index
(
   tiReportList01 = NRec (Unique, Surrogate)
  ,tiReportList02 = cParent + ReportName
  ,tiReportList03 = cParent + Priority + ReportName
);

create view vUserRepor
var
  CurGroup : comp;
as select
  *
from
   ReportList        (tiReportList03)
  ,ContourComponents
where
((
  CurGroup == ReportList.cParent
))
;

var
  UserReport : IUserReport;
  ModuleID   : String;

parameters
  ModuleID           // Название модуля в Деске
;

!-------------------------------------------------------------------------------
function AddGroup (GroupName: string; cParent : comp) : comp;
begin
  if GetFirst ReportList where ((    cParent   == ReportList.cParent
                                 and GroupName == ReportList.ReportName )) <> tsOk {
    Insert ReportList set
      ReportList.ReportName := GroupName,
      ReportList.cParent    := cParent,
      ReportList.Priority   := -1000         // Всегда выводим сначала группы, а потом отчеты
  }
  AddGroup := ReportList.NRec;
end; // AddGroup
!-------------------------------------------------------------------------------
function AddReport(ReportName, InterfaceName : string; Priority : integer; cParent : comp) : comp;
begin
  insert ReportList set
    ReportList.ReportName    := ReportName,
    ReportList.InterfaceName := InterfaceName,
    ReportList.cParent       := cParent,
    ReportList.Priority      := Priority,
    ReportList.isLeaf        := true;
  AddReport := ReportList.NRec;
end; // AddReport
!-------------------------------------------------------------------------------
function GetModuleName(Module : string) : string;
begin
  GetModuleName := ''
  if (GetFirst FastFirstRow ContourComponents
               where ((Module == ContourComponents.Name)) = tsOk) {
    GetModuleName := ContourComponents.Title;
  }
  else {
    GetModuleName := 'Неверное имя модуля (' + Module + ')';
  }
end; // GetModuleName
!-------------------------------------------------------------------------------
! Загрузка описания отчетов
function MakeTreeMenu: boolean;
var
  ImpCount, i, j : integer;
  IsVisible      : boolean;
  MyStr          : string;
  cParent        : comp;
begin
  MakeTreeMenu := false;
  if (not LoadImplementationList(ObjIfcName, IfcPrefix)) {
    Message('Не удалось загрузить список отчетов', Error + OkButton);
    Exit;
  }
  ImpCount := GetImplementationCount;
  StartNewVisual(vtIndicatorVisual, vfTimer + vfBreak + vfConfirm, 'Загрузка списка отчетов', ImpCount);
  _try {
    for (i := 0; i < ImpCount; i := i + 1) {
      if GetVipRef(UserReport, GetImplementationName(i)) {
        // Проверяем, виден ли этот отчет в текущем модуле
        IsVisible := False;
        j := 1;
        while True do {
          MyStr := UserReport.VisibleInModule(j);
          if (MyStr = '') {
            Break;
          }
          else {
            if (UpCase(MyStr) = UpCase(ModuleID)) or (MyStr = '*') then {
              IsVisible := True;
              Break;
            }
            j := j + 1;
          }
        }
        // Если виден
        if IsVisible then {
          // Добавляем группы в список отчетов
          cParent := 0;
          j := 1;
          while True do {
            MyStr := UserReport.GetGroupName(j);
            if (MyStr = '') {
              Break;
            }
            else {
              cParent := AddGroup(MyStr, cParent);
              j := j + 1;
            }
          }
          // Добавляем отчет
          MyStr := GetImplementationName(i);
          AddReport(UserReport.GetReportName, MyStr, UserReport.GetPriority, cParent);
          FreeVipInterface(UserReport);
        }
      }
      NextVisual;
    }
  }
  _except on ExUserBreak : {}
  _finally
    StopVisual('', 0);
  UnloadImplementationList;
  if RecordsInTable(#ReportList) = 0 {
    Message('Нет отчетов пользователя для модуля "' + GetModuleName(ModuleID) + '"', OkButton);
    Exit
  }
  CurGroup := 0;
  GetFirst ReportList where((CurGroup == cParent));
  MakeTreeMenu := true;
end; // MakeTree
!-------------------------------------------------------------------------------
Tree trZReports;
Table ReportList;
Fields
  ReportList.ReportName 'Наименование отчета' ('Наименование отчета',, sci1EnEscTree): Protect;
end;
!-------------------------------------------------------------------------------
TableEvent Table ReportList;

  cmTreeTop  : CurGroup := 0;
  cmTreeUp   : CurGroup := ReportList.cParent;
  cmTreeDown : CurGroup := ReportList.NRec;

  cmTreeNodeType : {
    if ReportList.isLeaf then
      TreeSetNodeType(trZReports, 2);
  }
  cmTreeNeedOwner : {
    if ReportList.cParent <> 0 then
      TreeJumpToRecord(trZReports, ReportList.cParent);
    else
      TreeJumpToRecord(trZReports, 0);
  }

  cmDefault : {
    if ReportList.isLeaf {
      if GetVipRef(UserReport, ReportList.InterfaceName) {
        UserReport.Run;
        FreeVipInterface(UserReport);
      }
      else
        Message('Не удалось загрузить интерфейс "' + ReportList.InterfaceName + '"', Error + OkButton);
    }
    else {
      if TreeNodeIsOpen(trZReports) then
        TreeCloseNode(trZReports)
      else
        TreeOpenNode(trZReports);
      RescanPanel(trZReports);
    }
  }

end;
!-------------------------------------------------------------------------------

HandleEvent
  cmInit : {
    ModuleID := Replace(ModuleID, '''', '');
    if (not MakeTreeMenu) {
      Abort; Exit;
    }
    SetWindowTitle(wnMainWindow,'Отчеты пользователя [' + GetModuleName (ModuleID) + ']');
  }
  cmDone : {
    Delete All ReportList;
  }
end;

end.
