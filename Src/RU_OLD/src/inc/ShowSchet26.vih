//------------------------------------------------------------------------------
//                                                      (c) Корпорация ГАЛАКТИКА
//------------------------------------------------------------------------------
// Галактика 7.12
// Отображение 26-значного счета
//------------------------------------------------------------------------------

#ifndef __ShowSchet26__vih__
#define __ShowSchet26__vih__

#ifdef ComponentVersion
#Component "F_Common"
#end

#ifdef Atl51
  #define KauViaParams wKau : tTabKau; cKau : tGetKau
#else
  #define KauViaParams wKau1, wKau2, wKau3, wKau4, wKau5, wKau6 : word; cKau1, cKau2, cKau3, cKau4, cKau5, cKau6 : tKodKau
#end

#doc
Отображение 26-значного бюджетного счета.
#end
ObjInterface ObjShowSchet26;
  //----------------------------------------------------------------------------
  #doc
  Возвращает номер счета бюджетного учета.
  Если бюджетный учет не ведется - вернет <b>Счет.Субсчет</b> .
  #end
  function ShowSchetBU (Sch : tSchet3; Sub : tSubSch; #KauViaParams) : string;
  //----------------------------------------------------------------------------
  #doc
  Возвращает наименование 6-ти уровней аналитики, за исключением бюджетных кодов.
  Если бюджетный учет не ведется - вернет всю аналитику.
  #end
  function ShowKauArrayBU (#KauViaParams) : string;
  //----------------------------------------------------------------------------
  #doc
  В новых формах не использовать! <br>
  Если ведется бюджетный учет - вернет бюджетный счет,
  иначе - обыкновенный счет без кода плана счетов. </brief> <br>
  Дополнительная функция для старых форм и потоков,
  где счет и субсчет выводятся двумя полями, как @@@ @@@.
  #end
  function GetSchet (Sch : tSchet3; Sub : tSubSch; #KauViaParams) : string;
  //----------------------------------------------------------------------------
  #doc
  В новых формах не использовать! <br>
  Если ведется бюджетный учет - вернет пустую строку, иначе - вернет субсчет. </brief> <br>
  Дополнительная функция для старых форм и потоков,
  где счет и субсчет выводятся двумя полями, как @@@ @@@.
  #end
  function GetSub   (Sub : tSubSch) : string;
  //----------------------------------------------------------------------------
end;

VipInterface ShowSchet26 implements ObjShowSchet26 #Licensed_Free;

#end // __ShowSchet26__vih__
