!╔══════════════════════════════════════════════════════════════════════════════╗
!║ Назначение    : для графы "с грузом следуют документы" в ТТН                 ║
!║ Параметры     : 1-й  pRecClass   - запись, к которой привязан классификатор  ║
!║                 2-й  wCodeClass  - код классификатора                        ║
!║                 3-й  pSpSopr     - SpSopr.NRec                               ║
!║                 4-й  sDocsReturn - возвращаемый результат - список документов║
!║                 5-й  sDocsReturn2- возвращаемый результат - список документов║
!║                 6-й  sDocsReturn3- возвращаемый результат - список документов║
!╚══════════════════════════════════════════════════════════════════════════════╝

#include ExtAttrClass.vih

#doc
Назначение:
  Интерфейс для графы "с грузом следуют документы" в ТТН

Параметры:
  pRecClass   - запись, к которой привязан классификатор
  wCodeClass  - код классификатора
  pSpSopr     - SpSopr.NRec
  sDocsReturn - возвращаемый результат - список документов
  sDocsReturn2- возвращаемый результат - список документов в доп.строке
  wParam      - дополнительный параметр
#end
Interface Prn_DocOfGoods alwaysReturn, cacheable;
Create View
Var
  pRecClass, pSpSopr: comp;
  wCodeClass  : word;
  sDocsReturn : string; // Возвращает документы следуемые с грузом который будут печататься построчно
  sDocsReturn2: string; // Возвращает документы следуемые с грузом которые будут печататься в доп.строке
  sDocsReturn3: string; // Возвращает документы следуемые с грузом которые будут печататься в доп.строке
  sDocsEndForm: string; // Возвращает документы следуемые с грузом которые будут печататься в конце формы
as select
 *

from
  ExClassVal(ExClassVal04)
, ExClassSeg
, SpSopr
, KatParty
, KatMC
, SpSopr SpSoprF
, AttrNam

where
((
   pRecClass             ==  ExClassVal.cRec       and
   wCodeClass            ==  ExClassVal.ClassCode  and
   ExClassVal.cClassSeg  ==  ExClassSeg.NRec       and
   pSpSopr               ==  SpSopr.NRec           and
   SpSopr.cParty         ==  KatParty.NRec         and
   SpSopr.cMcUsl         ==  KatMC.NRec            and
   SpSopr.cOwner         ==  SpSoprF.NRec
))
;

Parameters
  pRecClass
, wCodeClass
, pSpSopr
, sDocsReturn
, sDocsReturn2
, sDocsReturn3
, sDocsEndForm
;

#include soprc16.vpp

//******************************************************************************
// печать в дополнительную строку
Function DocsDopParam(wTable: word): longint;
{
  DocsDopParam := 0;

  if GetFirst AttrNam where (( wTable           ==  AttrNam.wTable  and
                               ExClassSeg.Name  ==  AttrNam.Name   )) = tsOk
    DocsDopParam := AttrNam.FilialNo;
}


//******************************************************************************
// формирование дополнительной строки
Procedure MakeDopStr(var StrDop1, StrDop2: string; StrAdd: string);
{
  if (length(StrDop1) + length(StrAdd) > 225)
    StrDop2 := StrDop2 + StrAdd
  else
    StrDop1 := StrDop1 + StrAdd;
}


//******************************************************************************
// документы следуемые с грузом
Procedure GetDocOfGoods;
var
  tStr, tStrDop: string;
  bDocEndForm  : boolean;
{
  if (pRecClass = comp(0)) EXIT;

  sDocsReturn  := '';
  sDocsReturn2 := '';
  sDocsReturn3 := '';
  sDocsEndForm := '';
  bDocEndForm  := not boGetTune('Doc.SD.PrnNakl.DocOfGood');

  _Loop ExClassVal
   if GetFirst fastfirstrow ExClassSeg = tsOk
   {
     tStr     := '';
     tStrDop  := '';

     if ((word(ExClassSeg.Value) and 1) = 1)
       tStr := WriteAttr(coSpSopr, SpSopr.NRec, ExClassSeg.Name);

     if (tStr <> '')
     {
       var tClassName: string;
       var tDocsParam: longint;

       tClassName := ExClassSeg.Name + ': ' +  tStr + '; ';
       tDocsParam := DocsDopParam(coSpSopr);

       if ((tDocsParam and 1) = 1)
         MakeDopStr(sDocsReturn2, sDocsReturn3, tClassName)
       else
         if ((tDocsParam and 3) = 0) and bDocEndForm
           sDocsEndForm := sDocsEndForm + tClassName
         else
           sDocsReturn  := sDocsReturn  + tClassName;
     }
     else
     {
        if ((word(ExClassSeg.Value) and 2) = 2) and (SpSopr.cParty <> comp(0))
        {
          var bIsOnePatry: boolean;
          bIsOnePatry := False;

          if (SpSopr.cOwner <> 0)
            if (GetFirst SpSoprF = tsOk)
              if (SpSoprF.cParty = SpSopr.cParty)
                bIsOnePatry := True;

          if (bIsOnePatry)
            tStr := ''
          else
            tStr := WriteAttr(coKatParty, KatParty.NRec, ExClassSeg.Name);

        }

        if (tStr <> '')
        {
          var tClassName: string;
          var tDocsParam: longint;

          tClassName := ExClassSeg.Name + ': ' +  tStr + '; ';
          tDocsParam := DocsDopParam(coKatParty);

          if ((tDocsParam and 1) = 1)
            MakeDopStr(sDocsReturn2, sDocsReturn3, tClassName)
          else
            if ((tDocsParam and 3) = 0) and bDocEndForm
              sDocsEndForm := sDocsEndForm + tClassName
            else
              sDocsReturn  := sDocsReturn  + tClassName;
        }
        else
        {
           if ((word(ExClassSeg.Value) and 4) = 4)
           {
             tStr := WriteAttr(coKatMC, KatMC.NRec, ExClassSeg.Name);

             if (tStr <> '')
             {
               var tClassName: string;
               var tDocsParam: longint;

               tClassName := ExClassSeg.Name + ': ' +  tStr + '; ';
               tDocsParam := DocsDopParam(coKatMC);

               if ((DocsDopParam(coKatMC) and 1) = 1)
                 MakeDopStr(sDocsReturn2, sDocsReturn3, tClassName)
               else
                 if ((tDocsParam and 3) = 0) and bDocEndForm
                   sDocsEndForm := sDocsEndForm + tClassName
                 else
                   sDocsReturn  := sDocsReturn  + tClassName;
             }
           }
        }
     }
   }
}

Handleevent
  cmInit:
  {
    GetDocOfGoods;
    abort;
  }
end;
end.